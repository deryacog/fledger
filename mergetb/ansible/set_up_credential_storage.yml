---
- name: Configure Docker Credential Store on Linux
  hosts: all
  become: true

  vars:
    docker_config_path: "/root/.docker/config.json"

  tasks:
    - name: Install dependencies
      apt:
        name:
          - docker.io
          - gnupg
          - pass
          - docker-credential-pass
        state: present
        update_cache: yes

    - name: Ensure GPG key is generated for pass
      shell: |
        if ! gpg --list-keys | grep -q "Docker Credential Store"; then
          gpg --batch --gen-key <<EOF
          %no-protection
          Key-Type: RSA
          Key-Length: 2048
          Subkey-Type: RSA
          Subkey-Length: 2048
          Name-Real: Docker Credential Store
          Expire-Date: 0
          %commit
          EOF
        fi
      args:
        executable: /bin/bash
      changed_when: false

    - name: Initialize pass with GPG key
      shell: |
        pass init "$(gpg --list-keys --with-colons | grep '^pub' | head -1 | awk -F: '{print $5}')"
      args:
        executable: /bin/bash
      changed_when: false

    - name: Create Docker config directory
      file:
        path: "{{ docker_config_path | dirname }}"
        state: directory
        owner: root
        group: root
        mode: '0700'

    - name: Configure Docker to use pass as credential store
      copy:
        content: |
          {
            "auths": {},
            "credsStore": "pass"
          }
        dest: "{{ docker_config_path }}"
        owner: root
        group: root
        mode: '0600'

    - name: Restart Docker service
      service:
        name: docker
        state: restarted

    - name: Verify Docker credential store
      shell: docker login
      args:
        executable: /bin/bash
      register: docker_login_output
      ignore_errors: true

    - name: Debug login output
      debug:
        msg: "{{ docker_login_output.stdout }}"
